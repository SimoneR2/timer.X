

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Apr 24 00:11:13 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18  0000                     
    19                           	psect	idataCOMRAM
    20  000366                     __pidataCOMRAM:
    21                           	opt stack 0
    22                           
    23                           ;initializer for _numeri
    24  000366  CF                 	db	207
    25  000367  82                 	db	130
    26  000368  67                 	db	103
    27  000369  A7                 	db	167
    28  00036A  AA                 	db	170
    29  00036B  AD                 	db	173
    30  00036C  ED                 	db	237
    31  00036D  86                 	db	134
    32  00036E  EF                 	db	239
    33  00036F  AF                 	db	175
    34                           
    35                           ;initializer for _porte
    36  000370  01                 	db	1
    37  000371  02                 	db	2
    38  000372  04                 	db	4
    39  000373  80                 	db	128
    40  0000                     _INTCON2bits	set	4081
    41  0000                     _INTCONbits	set	4082
    42  0000                     _LATA	set	3977
    43  0000                     _LATB	set	3978
    44  0000                     _LATC	set	3979
    45  0000                     _LATD	set	3980
    46  0000                     _PORTAbits	set	3968
    47  0000                     _PORTBbits	set	3969
    48  0000                     _PORTC	set	3970
    49  0000                     _PORTD	set	3971
    50  0000                     _PORTDbits	set	3971
    51  0000                     _RCONbits	set	4048
    52  0000                     _T0CON	set	4053
    53  0000                     _T0CONbits	set	4053
    54  0000                     _TMR0H	set	4055
    55  0000                     _TMR0L	set	4054
    56  0000                     _TRISA	set	3986
    57  0000                     _TRISB	set	3987
    58  0000                     _TRISC	set	3988
    59  0000                     _TRISD	set	3989
    60  0000                     _UCFGbits	set	3951
    61  0000                     _UCONbits	set	3949
    62                           
    63                           ; #config settings
    64  0000                     
    65                           	psect	cinit
    66  0002FA                     __pcinit:
    67                           	opt stack 0
    68  0002FA                     start_initialization:
    69                           	opt stack 0
    70  0002FA                     __initialization:
    71                           	opt stack 0
    72                           
    73                           ; Clear objects allocated to COMRAM (6 bytes)
    74  0002FA  6A31               	clrf	(__pbssCOMRAM+5)& (0+255),c
    75  0002FC  6A30               	clrf	(__pbssCOMRAM+4)& (0+255),c
    76  0002FE  6A2F               	clrf	(__pbssCOMRAM+3)& (0+255),c
    77  000300  6A2E               	clrf	(__pbssCOMRAM+2)& (0+255),c
    78  000302  6A2D               	clrf	(__pbssCOMRAM+1)& (0+255),c
    79  000304  6A2C               	clrf	__pbssCOMRAM& (0+255),c
    80                           
    81                           ; Initialize objects allocated to COMRAM (14 bytes)
    82                           ; load TBLPTR registers with __pidataCOMRAM
    83  000306  0E66               	movlw	low __pidataCOMRAM
    84  000308  6EF6               	movwf	tblptrl,c
    85  00030A  0E03               	movlw	high __pidataCOMRAM
    86  00030C  6EF7               	movwf	tblptrh,c
    87  00030E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    88  000310  6EF8               	movwf	tblptru,c
    89  000312  EE00  F01E         	lfsr	0,__pdataCOMRAM
    90  000316  EE10 F00E          	lfsr	1,14
    91  00031A                     copy_data0:
    92  00031A  0009               	tblrd		*+
    93  00031C  CFF5 FFEE          	movff	tablat,postinc0
    94  000320  50E5               	movf	postdec1,w,c
    95  000322  50E1               	movf	fsr1l,w,c
    96  000324  E1FA               	bnz	copy_data0
    97  000326                     end_of_initialization:
    98                           	opt stack 0
    99  000326                     __end_of__initialization:
   100                           	opt stack 0
   101  000326  9032               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   102  000328  9232               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   103  00032A  0100               	movlb	0
   104  00032C  EF0D  F000         	goto	_main	;jump to C main() function
   105                           tblptru	equ	0xFF8
   106                           tblptrh	equ	0xFF7
   107                           tblptrl	equ	0xFF6
   108                           tablat	equ	0xFF5
   109                           postinc0	equ	0xFEE
   110                           postdec1	equ	0xFE5
   111                           fsr1l	equ	0xFE1
   112                           
   113                           	psect	bssCOMRAM
   114  00002C                     __pbssCOMRAM:
   115                           	opt stack 0
   116  00002C                     _disp:
   117                           	opt stack 0
   118  00002C                     	ds	4
   119  000030                     _minuti:
   120                           	opt stack 0
   121  000030                     	ds	1
   122  000031                     _secondi:
   123                           	opt stack 0
   124  000031                     	ds	1
   125                           tblptru	equ	0xFF8
   126                           tblptrh	equ	0xFF7
   127                           tblptrl	equ	0xFF6
   128                           tablat	equ	0xFF5
   129                           postinc0	equ	0xFEE
   130                           postdec1	equ	0xFE5
   131                           fsr1l	equ	0xFE1
   132                           
   133                           	psect	dataCOMRAM
   134  00001E                     __pdataCOMRAM:
   135                           	opt stack 0
   136  00001E                     _numeri:
   137                           	opt stack 0
   138  00001E                     	ds	10
   139  000028                     _porte:
   140                           	opt stack 0
   141  000028                     	ds	4
   142                           tblptru	equ	0xFF8
   143                           tblptrh	equ	0xFF7
   144                           tblptrl	equ	0xFF6
   145                           tablat	equ	0xFF5
   146                           postinc0	equ	0xFEE
   147                           postdec1	equ	0xFE5
   148                           fsr1l	equ	0xFE1
   149                           
   150                           	psect	cstackCOMRAM
   151  000001                     __pcstackCOMRAM:
   152                           	opt stack 0
   153  000001                     ??_ISR_alta:
   154  000001                     
   155                           ; 0 bytes @ 0x0
   156  000001                     	ds	14
   157  00000F                     ?___awdiv:
   158                           	opt stack 0
   159  00000F                     ___awdiv@dividend:
   160                           	opt stack 0
   161                           
   162                           ; 2 bytes @ 0xE
   163  00000F                     	ds	2
   164  000011                     ___awdiv@divisor:
   165                           	opt stack 0
   166                           
   167                           ; 2 bytes @ 0x10
   168  000011                     	ds	2
   169  000013                     ___awdiv@counter:
   170                           	opt stack 0
   171                           
   172                           ; 1 bytes @ 0x12
   173  000013                     	ds	1
   174  000014                     ___awdiv@sign:
   175                           	opt stack 0
   176                           
   177                           ; 1 bytes @ 0x13
   178  000014                     	ds	1
   179  000015                     ___awdiv@quotient:
   180                           	opt stack 0
   181                           
   182                           ; 2 bytes @ 0x14
   183  000015                     	ds	2
   184  000017                     ??_main:
   185                           
   186                           ; 0 bytes @ 0x16
   187  000017                     	ds	1
   188  000018                     main@c:
   189                           	opt stack 0
   190                           
   191                           ; 1 bytes @ 0x17
   192  000018                     	ds	1
   193  000019                     main@b:
   194                           	opt stack 0
   195                           
   196                           ; 1 bytes @ 0x18
   197  000019                     	ds	1
   198  00001A                     main@f:
   199                           	opt stack 0
   200                           
   201                           ; 1 bytes @ 0x19
   202  00001A                     	ds	1
   203  00001B                     main@i_545:
   204                           	opt stack 0
   205                           
   206                           ; 1 bytes @ 0x1A
   207  00001B                     	ds	1
   208  00001C                     main@i_547:
   209                           	opt stack 0
   210                           
   211                           ; 1 bytes @ 0x1B
   212  00001C                     	ds	1
   213  00001D                     main@i:
   214                           	opt stack 0
   215                           
   216                           ; 1 bytes @ 0x1C
   217  00001D                     	ds	1
   218                           tblptru	equ	0xFF8
   219                           tblptrh	equ	0xFF7
   220                           tblptrl	equ	0xFF6
   221                           tablat	equ	0xFF5
   222                           postinc0	equ	0xFEE
   223                           postdec1	equ	0xFE5
   224                           fsr1l	equ	0xFE1
   225                           
   226 ;;
   227 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   228 ;;
   229 ;; *************** function _main *****************
   230 ;; Defined at:
   231 ;;		line 57 in file "timer_main.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;  f               1   25[COMRAM] unsigned char 
   236 ;;  i               1   27[COMRAM] unsigned char 
   237 ;;  b               1   24[COMRAM] unsigned char 
   238 ;;  i               1   26[COMRAM] unsigned char 
   239 ;;  c               1   23[COMRAM] unsigned char 
   240 ;;  i               1   28[COMRAM] unsigned char 
   241 ;; Return value:  Size  Location     Type
   242 ;;		None               void
   243 ;; Registers used:
   244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   245 ;; Tracked objects:
   246 ;;		On entry : 0/0
   247 ;;		On exit  : 0/0
   248 ;;		Unchanged: 0/0
   249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   250 ;;      Params:         0       0       0       0       0       0       0       0       0
   251 ;;      Locals:         6       0       0       0       0       0       0       0       0
   252 ;;      Temps:          1       0       0       0       0       0       0       0       0
   253 ;;      Totals:         7       0       0       0       0       0       0       0       0
   254 ;;Total ram usage:        7 bytes
   255 ;; Hardware stack levels required when called:    2
   256 ;; This function calls:
   257 ;;		___awdiv
   258 ;;		_configurazione
   259 ;; This function is called by:
   260 ;;		Startup code after reset
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264                           	psect	text0
   265  00001A                     __ptext0:
   266                           	opt stack 0
   267  00001A                     _main:
   268                           	opt stack 29
   269                           
   270                           ;timer_main.c: 58: configurazione();
   271                           
   272                           ;incstack = 0
   273  00001A  EC98  F001         	call	_configurazione	;wreg free
   274  00001E                     l946:
   275                           
   276                           ;timer_main.c: 60: disp[3] = secondi / 10;
   277  00001E  5031               	movf	_secondi,w,c	;volatile
   278  000020  6E0F               	movwf	___awdiv@dividend,c
   279  000022  6A10               	clrf	___awdiv@dividend+1,c
   280  000024  BE0F               	btfsc	___awdiv@dividend,7,c
   281  000026  0610               	decf	___awdiv@dividend+1,f,c
   282  000028  0E00               	movlw	0
   283  00002A  6E12               	movwf	___awdiv@divisor+1,c
   284  00002C  0E0A               	movlw	10
   285  00002E  6E11               	movwf	___awdiv@divisor,c
   286  000030  EC3B  F001         	call	___awdiv	;wreg free
   287  000034  500F               	movf	?___awdiv,w,c
   288  000036  6E2F               	movwf	_disp+3,c
   289                           
   290                           ;timer_main.c: 61: disp[2] = secondi - (disp[3] * 10);
   291  000038  502F               	movf	_disp+3,w,c
   292  00003A  0D0A               	mullw	10
   293  00003C  50F3               	movf	prodl,w,c
   294  00003E  0800               	sublw	0
   295  000040  2431               	addwf	_secondi,w,c	;volatile
   296  000042  6E2E               	movwf	_disp+2,c
   297                           
   298                           ;timer_main.c: 62: disp[0] = minuti / 10;
   299  000044  5030               	movf	_minuti,w,c	;volatile
   300  000046  6E0F               	movwf	___awdiv@dividend,c
   301  000048  6A10               	clrf	___awdiv@dividend+1,c
   302  00004A  BE0F               	btfsc	___awdiv@dividend,7,c
   303  00004C  0610               	decf	___awdiv@dividend+1,f,c
   304  00004E  0E00               	movlw	0
   305  000050  6E12               	movwf	___awdiv@divisor+1,c
   306  000052  0E0A               	movlw	10
   307  000054  6E11               	movwf	___awdiv@divisor,c
   308  000056  EC3B  F001         	call	___awdiv	;wreg free
   309  00005A  500F               	movf	?___awdiv,w,c
   310  00005C  6E2C               	movwf	_disp,c
   311                           
   312                           ;timer_main.c: 63: disp[1] = minuti - (disp[0] * 10);
   313  00005E  502C               	movf	_disp,w,c
   314  000060  0D0A               	mullw	10
   315  000062  50F3               	movf	prodl,w,c
   316  000064  0800               	sublw	0
   317  000066  2430               	addwf	_minuti,w,c	;volatile
   318  000068  6E2D               	movwf	_disp+1,c
   319                           
   320                           ;timer_main.c: 65: for (unsigned char i = 0; i < 4; i++) {
   321  00006A  0E00               	movlw	0
   322  00006C  6E1D               	movwf	main@i,c
   323  00006E                     l956:
   324  00006E  0E03               	movlw	3
   325  000070  641D               	cpfsgt	main@i,c
   326  000072  D001               	goto	l960
   327  000074  D02C               	goto	l73
   328  000076                     l960:
   329                           
   330                           ;timer_main.c: 66: PORTD = numeri[disp[i]];
   331  000076  501D               	movf	main@i,w,c
   332  000078  0D01               	mullw	1
   333  00007A  0E2C               	movlw	low _disp
   334  00007C  24F3               	addwf	prodl,w,c
   335  00007E  6ED9               	movwf	fsr2l,c
   336  000080  0E00               	movlw	high _disp
   337  000082  20F4               	addwfc	prodh,w,c
   338  000084  6EDA               	movwf	fsr2h,c
   339  000086  50DF               	movf	indf2,w,c
   340  000088  6E17               	movwf	??_main& (0+255),c
   341  00008A  5017               	movf	??_main,w,c
   342  00008C  0D01               	mullw	1
   343  00008E  0E1E               	movlw	low _numeri
   344  000090  24F3               	addwf	prodl,w,c
   345  000092  6ED9               	movwf	fsr2l,c
   346  000094  0E00               	movlw	high _numeri
   347  000096  20F4               	addwfc	prodh,w,c
   348  000098  6EDA               	movwf	fsr2h,c
   349  00009A  50DF               	movf	indf2,w,c
   350  00009C  6E83               	movwf	3971,c	;volatile
   351                           
   352                           ;timer_main.c: 67: if (i == 2){
   353  00009E  0E02               	movlw	2
   354  0000A0  181D               	xorwf	main@i,w,c
   355  0000A2  B4D8               	btfsc	status,2,c
   356                           
   357                           ;timer_main.c: 68: PORTDbits.RD4 =1;
   358  0000A4  8883               	bsf	3971,4,c	;volatile
   359                           
   360                           ;timer_main.c: 69: }
   361                           ;timer_main.c: 70: PORTC = porte[i];
   362  0000A6  501D               	movf	main@i,w,c
   363  0000A8  0D01               	mullw	1
   364  0000AA  0E28               	movlw	low _porte
   365  0000AC  24F3               	addwf	prodl,w,c
   366  0000AE  6ED9               	movwf	fsr2l,c
   367  0000B0  0E00               	movlw	high _porte
   368  0000B2  20F4               	addwfc	prodh,w,c
   369  0000B4  6EDA               	movwf	fsr2h,c
   370  0000B6  50DF               	movf	indf2,w,c
   371  0000B8  6E82               	movwf	3970,c	;volatile
   372                           
   373                           ;timer_main.c: 71: _delay((unsigned long)((2)*(16000000/4000.0)));
   374  0000BA  0E0B               	movlw	11
   375  0000BC  6E17               	movwf	??_main& (0+255),c
   376  0000BE  0E62               	movlw	98
   377  0000C0                     u577:
   378  0000C0  2EE8               	decfsz	wreg,f,c
   379  0000C2  D7FE               	goto	u577
   380  0000C4  2E17               	decfsz	??_main& (0+255),f,c
   381  0000C6  D7FC               	goto	u577
   382  0000C8  D000               	nop2	
   383  0000CA  2A1D               	incf	main@i,f,c
   384  0000CC  D7D0               	goto	l956
   385  0000CE                     l73:
   386                           
   387                           ;timer_main.c: 72: }
   388                           ;timer_main.c: 73: if ((PORTBbits.RB2 == 0)&&((secondi != 0) || (minuti != 0))) {
   389  0000CE  B481               	btfsc	3969,2,c	;volatile
   390  0000D0  D00F               	goto	l982
   391  0000D2  5031               	movf	_secondi,w,c	;volatile
   392  0000D4  A4D8               	btfss	status,2,c
   393  0000D6  D003               	goto	l77
   394  0000D8  5030               	movf	_minuti,w,c	;volatile
   395  0000DA  B4D8               	btfsc	status,2,c
   396  0000DC  D009               	goto	l982
   397  0000DE                     l77:
   398                           
   399                           ;timer_main.c: 74: PORTAbits.RA5 = 1;
   400  0000DE  8A80               	bsf	3968,5,c	;volatile
   401                           
   402                           ;timer_main.c: 75: INTCONbits.INT0IE = 0;
   403  0000E0  98F2               	bcf	intcon,4,c	;volatile
   404                           
   405                           ;timer_main.c: 76: INTCONbits.TMR0IF = 0;
   406  0000E2  94F2               	bcf	intcon,2,c	;volatile
   407                           
   408                           ;timer_main.c: 77: INTCONbits.TMR0IE = 1;
   409  0000E4  8AF2               	bsf	intcon,5,c	;volatile
   410                           
   411                           ;timer_main.c: 78: TMR0H = 0x0B;
   412  0000E6  0E0B               	movlw	11
   413  0000E8  6ED7               	movwf	4055,c	;volatile
   414                           
   415                           ;timer_main.c: 79: TMR0L = 0xDC;
   416  0000EA  0EDC               	movlw	220
   417  0000EC  6ED6               	movwf	4054,c	;volatile
   418                           
   419                           ;timer_main.c: 80: T0CONbits.TMR0ON = 1;
   420  0000EE  8ED5               	bsf	4053,7,c	;volatile
   421  0000F0                     l982:
   422                           
   423                           ;timer_main.c: 81: }
   424                           ;timer_main.c: 82: if ((T0CONbits.TMR0ON == 1)&&(secondi == 0)&(minuti == 0)) {
   425  0000F0  AED5               	btfss	4053,7,c	;volatile
   426  0000F2  D795               	goto	l946
   427  0000F4  5031               	movf	_secondi,w,c	;volatile
   428  0000F6  A4D8               	btfss	status,2,c
   429  0000F8  D792               	goto	l946
   430  0000FA  5030               	movf	_minuti,w,c	;volatile
   431  0000FC  A4D8               	btfss	status,2,c
   432  0000FE  D78F               	goto	l946
   433                           
   434                           ;timer_main.c: 83: T0CONbits.TMR0ON = 0;
   435  000100  9ED5               	bcf	4053,7,c	;volatile
   436                           
   437                           ;timer_main.c: 84: PORTAbits.RA5 = 0;
   438  000102  9A80               	bcf	3968,5,c	;volatile
   439                           
   440                           ;timer_main.c: 85: for (unsigned char c = 0; c<10; c++){
   441  000104  0E00               	movlw	0
   442  000106  6E18               	movwf	main@c,c
   443  000108                     l992:
   444  000108  0E09               	movlw	9
   445  00010A  6418               	cpfsgt	main@c,c
   446  00010C  D001               	goto	l996
   447  00010E  D787               	goto	l946
   448  000110                     l996:
   449                           
   450                           ;timer_main.c: 86: for (unsigned char i = 0; i < 4; i++) {
   451  000110  0E00               	movlw	0
   452  000112  6E1B               	movwf	main@i_545,c
   453  000114                     l998:
   454  000114  0E03               	movlw	3
   455  000116  641B               	cpfsgt	main@i_545,c
   456  000118  D001               	goto	l81
   457  00011A  D016               	goto	l1010
   458  00011C                     l81:
   459                           
   460                           ;timer_main.c: 87: PORTD = numeri[0];
   461  00011C  C01E  FF83         	movff	_numeri,3971	;volatile
   462                           
   463                           ;timer_main.c: 88: PORTC = porte[i];
   464  000120  501B               	movf	main@i_545,w,c
   465  000122  0D01               	mullw	1
   466  000124  0E28               	movlw	low _porte
   467  000126  24F3               	addwf	prodl,w,c
   468  000128  6ED9               	movwf	fsr2l,c
   469  00012A  0E00               	movlw	high _porte
   470  00012C  20F4               	addwfc	prodh,w,c
   471  00012E  6EDA               	movwf	fsr2h,c
   472  000130  50DF               	movf	indf2,w,c
   473  000132  6E82               	movwf	3970,c	;volatile
   474                           
   475                           ;timer_main.c: 89: _delay((unsigned long)((2)*(16000000/4000.0)));
   476  000134  0E0B               	movlw	11
   477  000136  6E17               	movwf	??_main& (0+255),c
   478  000138  0E62               	movlw	98
   479  00013A                     u587:
   480  00013A  2EE8               	decfsz	wreg,f,c
   481  00013C  D7FE               	goto	u587
   482  00013E  2E17               	decfsz	??_main& (0+255),f,c
   483  000140  D7FC               	goto	u587
   484  000142  D000               	nop2	
   485  000144  2A1B               	incf	main@i_545,f,c
   486  000146  D7E6               	goto	l998
   487  000148                     l1010:
   488                           
   489                           ;timer_main.c: 90: }
   490                           ;timer_main.c: 91: for (unsigned char b = 0; b < 10; b++) {
   491  000148  0E00               	movlw	0
   492  00014A  6E19               	movwf	main@b,c
   493  00014C                     l1012:
   494  00014C  0E09               	movlw	9
   495  00014E  6419               	cpfsgt	main@b,c
   496  000150  D001               	goto	l1016
   497  000152  D009               	goto	l1020
   498  000154                     l1016:
   499                           
   500                           ;timer_main.c: 92: _delay((unsigned long)((10)*(16000000/4000.0)));
   501  000154  0E34               	movlw	52
   502  000156  6E17               	movwf	??_main& (0+255),c
   503  000158  0EF2               	movlw	242
   504  00015A                     u597:
   505  00015A  2EE8               	decfsz	wreg,f,c
   506  00015C  D7FE               	goto	u597
   507  00015E  2E17               	decfsz	??_main& (0+255),f,c
   508  000160  D7FC               	goto	u597
   509  000162  2A19               	incf	main@b,f,c
   510  000164  D7F3               	goto	l1012
   511  000166                     l1020:
   512                           
   513                           ;timer_main.c: 93: }
   514                           ;timer_main.c: 94: for (unsigned char i = 0; i < 4; i++) {
   515  000166  0E00               	movlw	0
   516  000168  6E1C               	movwf	main@i_547,c
   517  00016A                     l1022:
   518  00016A  0E03               	movlw	3
   519  00016C  641C               	cpfsgt	main@i_547,c
   520  00016E  D001               	goto	l1026
   521  000170  D016               	goto	l1036
   522  000172                     l1026:
   523                           
   524                           ;timer_main.c: 95: PORTD = 0x00;
   525  000172  0E00               	movlw	0
   526  000174  6E83               	movwf	3971,c	;volatile
   527                           
   528                           ;timer_main.c: 96: PORTC = porte[i];
   529  000176  501C               	movf	main@i_547,w,c
   530  000178  0D01               	mullw	1
   531  00017A  0E28               	movlw	low _porte
   532  00017C  24F3               	addwf	prodl,w,c
   533  00017E  6ED9               	movwf	fsr2l,c
   534  000180  0E00               	movlw	high _porte
   535  000182  20F4               	addwfc	prodh,w,c
   536  000184  6EDA               	movwf	fsr2h,c
   537  000186  50DF               	movf	indf2,w,c
   538  000188  6E82               	movwf	3970,c	;volatile
   539                           
   540                           ;timer_main.c: 97: _delay((unsigned long)((2)*(16000000/4000.0)));
   541  00018A  0E0B               	movlw	11
   542  00018C  6E17               	movwf	??_main& (0+255),c
   543  00018E  0E62               	movlw	98
   544  000190                     u607:
   545  000190  2EE8               	decfsz	wreg,f,c
   546  000192  D7FE               	goto	u607
   547  000194  2E17               	decfsz	??_main& (0+255),f,c
   548  000196  D7FC               	goto	u607
   549  000198  D000               	nop2	
   550  00019A  2A1C               	incf	main@i_547,f,c
   551  00019C  D7E6               	goto	l1022
   552  00019E                     l1036:
   553                           
   554                           ;timer_main.c: 98: }
   555                           ;timer_main.c: 100: for (unsigned char f = 0; f < 10; f++) {
   556  00019E  0E00               	movlw	0
   557  0001A0  6E1A               	movwf	main@f,c
   558  0001A2                     l1038:
   559  0001A2  0E09               	movlw	9
   560  0001A4  641A               	cpfsgt	main@f,c
   561  0001A6  D001               	goto	l1042
   562  0001A8  D009               	goto	l1046
   563  0001AA                     l1042:
   564                           
   565                           ;timer_main.c: 101: _delay((unsigned long)((10)*(16000000/4000.0)));
   566  0001AA  0E34               	movlw	52
   567  0001AC  6E17               	movwf	??_main& (0+255),c
   568  0001AE  0EF2               	movlw	242
   569  0001B0                     u617:
   570  0001B0  2EE8               	decfsz	wreg,f,c
   571  0001B2  D7FE               	goto	u617
   572  0001B4  2E17               	decfsz	??_main& (0+255),f,c
   573  0001B6  D7FC               	goto	u617
   574  0001B8  2A1A               	incf	main@f,f,c
   575  0001BA  D7F3               	goto	l1038
   576  0001BC                     l1046:
   577  0001BC  2A18               	incf	main@c,f,c
   578  0001BE  D7A4               	goto	l992
   579  0001C0                     __end_of_main:
   580                           	opt stack 0
   581                           tblptru	equ	0xFF8
   582                           tblptrh	equ	0xFF7
   583                           tblptrl	equ	0xFF6
   584                           tablat	equ	0xFF5
   585                           prodh	equ	0xFF4
   586                           prodl	equ	0xFF3
   587                           intcon	equ	0xFF2
   588                           postinc0	equ	0xFEE
   589                           wreg	equ	0xFE8
   590                           postdec1	equ	0xFE5
   591                           fsr1l	equ	0xFE1
   592                           indf2	equ	0xFDF
   593                           fsr2h	equ	0xFDA
   594                           fsr2l	equ	0xFD9
   595                           status	equ	0xFD8
   596                           
   597 ;; *************** function _configurazione *****************
   598 ;; Defined at:
   599 ;;		line 108 in file "timer_main.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;		None
   602 ;; Auto vars:     Size  Location     Type
   603 ;;		None
   604 ;; Return value:  Size  Location     Type
   605 ;;		None               void
   606 ;; Registers used:
   607 ;;		wreg, status,2
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   613 ;;      Params:         0       0       0       0       0       0       0       0       0
   614 ;;      Locals:         0       0       0       0       0       0       0       0       0
   615 ;;      Temps:          0       0       0       0       0       0       0       0       0
   616 ;;      Totals:         0       0       0       0       0       0       0       0       0
   617 ;;Total ram usage:        0 bytes
   618 ;; Hardware stack levels used:    1
   619 ;; Hardware stack levels required when called:    1
   620 ;; This function calls:
   621 ;;		Nothing
   622 ;; This function is called by:
   623 ;;		_main
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           	psect	text1
   628  000330                     __ptext1:
   629                           	opt stack 0
   630  000330                     _configurazione:
   631                           	opt stack 29
   632                           
   633                           ;timer_main.c: 109: UCONbits.USBEN = 0;
   634                           
   635                           ;incstack = 0
   636  000330  966D               	bcf	3949,3,c	;volatile
   637                           
   638                           ;timer_main.c: 110: UCFGbits.UTRDIS = 1;
   639  000332  866F               	bsf	3951,3,c	;volatile
   640                           
   641                           ;timer_main.c: 111: LATA = 0;
   642  000334  0E00               	movlw	0
   643  000336  6E89               	movwf	3977,c	;volatile
   644                           
   645                           ;timer_main.c: 112: TRISA = 0b11000000;
   646  000338  0EC0               	movlw	192
   647  00033A  6E92               	movwf	3986,c	;volatile
   648                           
   649                           ;timer_main.c: 114: LATB = 0;
   650  00033C  0E00               	movlw	0
   651  00033E  6E8A               	movwf	3978,c	;volatile
   652                           
   653                           ;timer_main.c: 115: TRISB = 0xFF;
   654  000340  6893               	setf	3987,c	;volatile
   655                           
   656                           ;timer_main.c: 117: LATC = 0;
   657  000342  0E00               	movlw	0
   658  000344  6E8B               	movwf	3979,c	;volatile
   659                           
   660                           ;timer_main.c: 118: TRISC = 0x00;
   661  000346  0E00               	movlw	0
   662  000348  6E94               	movwf	3988,c	;volatile
   663                           
   664                           ;timer_main.c: 120: LATD = 0;
   665  00034A  0E00               	movlw	0
   666  00034C  6E8C               	movwf	3980,c	;volatile
   667                           
   668                           ;timer_main.c: 121: TRISD = 0x00;
   669  00034E  0E00               	movlw	0
   670  000350  6E95               	movwf	3989,c	;volatile
   671                           
   672                           ;timer_main.c: 122: INTCONbits.GIEH = 1;
   673  000352  8EF2               	bsf	intcon,7,c	;volatile
   674                           
   675                           ;timer_main.c: 123: INTCONbits.GIEL = 0;
   676  000354  9CF2               	bcf	intcon,6,c	;volatile
   677                           
   678                           ;timer_main.c: 124: RCONbits.IPEN = 1;
   679  000356  8ED0               	bsf	4048,7,c	;volatile
   680                           
   681                           ;timer_main.c: 125: INTCONbits.INT0IF = 0;
   682  000358  92F2               	bcf	intcon,1,c	;volatile
   683                           
   684                           ;timer_main.c: 126: INTCONbits.INT0IE = 1;
   685  00035A  88F2               	bsf	intcon,4,c	;volatile
   686                           
   687                           ;timer_main.c: 127: INTCON2bits.INTEDG0 = 1;
   688  00035C  8CF1               	bsf	intcon2,6,c	;volatile
   689                           
   690                           ;timer_main.c: 128: T0CON = 0x85;
   691  00035E  0E85               	movlw	133
   692  000360  6ED5               	movwf	4053,c	;volatile
   693                           
   694                           ;timer_main.c: 129: T0CONbits.TMR0ON = 0;
   695  000362  9ED5               	bcf	4053,7,c	;volatile
   696  000364  0012               	return		;funcret
   697  000366                     __end_of_configurazione:
   698                           	opt stack 0
   699                           tblptru	equ	0xFF8
   700                           tblptrh	equ	0xFF7
   701                           tblptrl	equ	0xFF6
   702                           tablat	equ	0xFF5
   703                           prodh	equ	0xFF4
   704                           prodl	equ	0xFF3
   705                           intcon	equ	0xFF2
   706                           intcon2	equ	0xFF1
   707                           postinc0	equ	0xFEE
   708                           wreg	equ	0xFE8
   709                           postdec1	equ	0xFE5
   710                           fsr1l	equ	0xFE1
   711                           indf2	equ	0xFDF
   712                           fsr2h	equ	0xFDA
   713                           fsr2l	equ	0xFD9
   714                           status	equ	0xFD8
   715                           
   716 ;; *************** function ___awdiv *****************
   717 ;; Defined at:
   718 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;  dividend        2   14[COMRAM] int 
   721 ;;  divisor         2   16[COMRAM] int 
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  quotient        2   20[COMRAM] int 
   724 ;;  sign            1   19[COMRAM] unsigned char 
   725 ;;  counter         1   18[COMRAM] unsigned char 
   726 ;; Return value:  Size  Location     Type
   727 ;;                  2   14[COMRAM] int 
   728 ;; Registers used:
   729 ;;		wreg, status,2, status,0
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   735 ;;      Params:         4       0       0       0       0       0       0       0       0
   736 ;;      Locals:         4       0       0       0       0       0       0       0       0
   737 ;;      Temps:          0       0       0       0       0       0       0       0       0
   738 ;;      Totals:         8       0       0       0       0       0       0       0       0
   739 ;;Total ram usage:        8 bytes
   740 ;; Hardware stack levels used:    1
   741 ;; Hardware stack levels required when called:    1
   742 ;; This function calls:
   743 ;;		Nothing
   744 ;; This function is called by:
   745 ;;		_main
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           	psect	text2
   750  000276                     __ptext2:
   751                           	opt stack 0
   752  000276                     ___awdiv:
   753                           	opt stack 29
   754                           
   755                           ;incstack = 0
   756  000276  0E00               	movlw	0
   757  000278  6E14               	movwf	___awdiv@sign,c
   758  00027A  AE12               	btfss	___awdiv@divisor+1,7,c
   759  00027C  D006               	goto	l908
   760  00027E  6C11               	negf	___awdiv@divisor,c
   761  000280  1E12               	comf	___awdiv@divisor+1,f,c
   762  000282  B0D8               	btfsc	status,0,c
   763  000284  2A12               	incf	___awdiv@divisor+1,f,c
   764  000286  0E01               	movlw	1
   765  000288  6E14               	movwf	___awdiv@sign,c
   766  00028A                     l908:
   767  00028A  AE10               	btfss	___awdiv@dividend+1,7,c
   768  00028C  D006               	goto	l914
   769  00028E  6C0F               	negf	___awdiv@dividend,c
   770  000290  1E10               	comf	___awdiv@dividend+1,f,c
   771  000292  B0D8               	btfsc	status,0,c
   772  000294  2A10               	incf	___awdiv@dividend+1,f,c
   773  000296  0E01               	movlw	1
   774  000298  1A14               	xorwf	___awdiv@sign,f,c
   775  00029A                     l914:
   776  00029A  0E00               	movlw	0
   777  00029C  6E16               	movwf	___awdiv@quotient+1,c
   778  00029E  0E00               	movlw	0
   779  0002A0  6E15               	movwf	___awdiv@quotient,c
   780  0002A2  5011               	movf	___awdiv@divisor,w,c
   781  0002A4  1012               	iorwf	___awdiv@divisor+1,w,c
   782  0002A6  B4D8               	btfsc	status,2,c
   783  0002A8  D01C               	goto	l936
   784  0002AA  0E01               	movlw	1
   785  0002AC  6E13               	movwf	___awdiv@counter,c
   786  0002AE  D004               	goto	l922
   787  0002B0                     l920:
   788  0002B0  90D8               	bcf	status,0,c
   789  0002B2  3611               	rlcf	___awdiv@divisor,f,c
   790  0002B4  3612               	rlcf	___awdiv@divisor+1,f,c
   791  0002B6  2A13               	incf	___awdiv@counter,f,c
   792  0002B8                     l922:
   793  0002B8  AE12               	btfss	___awdiv@divisor+1,7,c
   794  0002BA  D7FA               	goto	l920
   795  0002BC                     l924:
   796  0002BC  90D8               	bcf	status,0,c
   797  0002BE  3615               	rlcf	___awdiv@quotient,f,c
   798  0002C0  3616               	rlcf	___awdiv@quotient+1,f,c
   799  0002C2  5011               	movf	___awdiv@divisor,w,c
   800  0002C4  5C0F               	subwf	___awdiv@dividend,w,c
   801  0002C6  5012               	movf	___awdiv@divisor+1,w,c
   802  0002C8  5810               	subwfb	___awdiv@dividend+1,w,c
   803  0002CA  A0D8               	btfss	status,0,c
   804  0002CC  D005               	goto	l932
   805  0002CE  5011               	movf	___awdiv@divisor,w,c
   806  0002D0  5E0F               	subwf	___awdiv@dividend,f,c
   807  0002D2  5012               	movf	___awdiv@divisor+1,w,c
   808  0002D4  5A10               	subwfb	___awdiv@dividend+1,f,c
   809  0002D6  8015               	bsf	___awdiv@quotient,0,c
   810  0002D8                     l932:
   811  0002D8  90D8               	bcf	status,0,c
   812  0002DA  3212               	rrcf	___awdiv@divisor+1,f,c
   813  0002DC  3211               	rrcf	___awdiv@divisor,f,c
   814  0002DE  2E13               	decfsz	___awdiv@counter,f,c
   815  0002E0  D7ED               	goto	l924
   816  0002E2                     l936:
   817  0002E2  5014               	movf	___awdiv@sign,w,c
   818  0002E4  B4D8               	btfsc	status,2,c
   819  0002E6  D004               	goto	l940
   820  0002E8  6C15               	negf	___awdiv@quotient,c
   821  0002EA  1E16               	comf	___awdiv@quotient+1,f,c
   822  0002EC  B0D8               	btfsc	status,0,c
   823  0002EE  2A16               	incf	___awdiv@quotient+1,f,c
   824  0002F0                     l940:
   825  0002F0  C015  F00F         	movff	___awdiv@quotient,?___awdiv
   826  0002F4  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
   827  0002F8  0012               	return	
   828  0002FA                     __end_of___awdiv:
   829                           	opt stack 0
   830                           tblptru	equ	0xFF8
   831                           tblptrh	equ	0xFF7
   832                           tblptrl	equ	0xFF6
   833                           tablat	equ	0xFF5
   834                           prodh	equ	0xFF4
   835                           prodl	equ	0xFF3
   836                           intcon	equ	0xFF2
   837                           intcon2	equ	0xFF1
   838                           postinc0	equ	0xFEE
   839                           wreg	equ	0xFE8
   840                           postdec1	equ	0xFE5
   841                           fsr1l	equ	0xFE1
   842                           indf2	equ	0xFDF
   843                           fsr2h	equ	0xFDA
   844                           fsr2l	equ	0xFD9
   845                           status	equ	0xFD8
   846                           
   847 ;; *************** function _ISR_alta *****************
   848 ;; Defined at:
   849 ;;		line 25 in file "timer_main.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;		None
   854 ;; Return value:  Size  Location     Type
   855 ;;		None               void
   856 ;; Registers used:
   857 ;;		wreg, status,2, status,0
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   863 ;;      Params:         0       0       0       0       0       0       0       0       0
   864 ;;      Locals:         0       0       0       0       0       0       0       0       0
   865 ;;      Temps:         14       0       0       0       0       0       0       0       0
   866 ;;      Totals:        14       0       0       0       0       0       0       0       0
   867 ;;Total ram usage:       14 bytes
   868 ;; Hardware stack levels used:    1
   869 ;; This function calls:
   870 ;;		Nothing
   871 ;; This function is called by:
   872 ;;		Interrupt level 2
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           	psect	intcode
   877  000008                     __pintcode:
   878                           	opt stack 0
   879  000008                     _ISR_alta:
   880                           	opt stack 29
   881                           
   882                           ;incstack = 0
   883  000008  8232               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   884  00000A  CFFA F001          	movff	pclath,??_ISR_alta
   885  00000E  CFFB F002          	movff	pclatu,??_ISR_alta+1
   886  000012  EDE0  F000         	call	int_func,f	;refresh shadow registers
   887                           pclatu	equ	0xFFB
   888                           pclath	equ	0xFFA
   889                           tblptru	equ	0xFF8
   890                           tblptrh	equ	0xFF7
   891                           tblptrl	equ	0xFF6
   892                           tablat	equ	0xFF5
   893                           prodh	equ	0xFF4
   894                           prodl	equ	0xFF3
   895                           intcon	equ	0xFF2
   896                           intcon2	equ	0xFF1
   897                           postinc0	equ	0xFEE
   898                           wreg	equ	0xFE8
   899                           postdec1	equ	0xFE5
   900                           fsr1l	equ	0xFE1
   901                           indf2	equ	0xFDF
   902                           fsr2h	equ	0xFDA
   903                           fsr2l	equ	0xFD9
   904                           status	equ	0xFD8
   905                           
   906                           	psect	intcode_body
   907  0001C0                     __pintcode_body:
   908                           	opt stack 29
   909  0001C0                     int_func:
   910                           	opt stack 29
   911  0001C0  0006               	pop		; remove dummy address from shadow register refresh
   912  0001C2  CFE9 F003          	movff	fsr0l,??_ISR_alta+2
   913  0001C6  CFEA F004          	movff	fsr0h,??_ISR_alta+3
   914  0001CA  CFE1 F005          	movff	fsr1l,??_ISR_alta+4
   915  0001CE  CFE2 F006          	movff	fsr1h,??_ISR_alta+5
   916  0001D2  CFD9 F007          	movff	fsr2l,??_ISR_alta+6
   917  0001D6  CFDA F008          	movff	fsr2h,??_ISR_alta+7
   918  0001DA  CFF3 F009          	movff	prodl,??_ISR_alta+8
   919  0001DE  CFF4 F00A          	movff	prodh,??_ISR_alta+9
   920  0001E2  CFF6 F00B          	movff	tblptrl,??_ISR_alta+10
   921  0001E6  CFF7 F00C          	movff	tblptrh,??_ISR_alta+11
   922  0001EA  CFF8 F00D          	movff	tblptru,??_ISR_alta+12
   923  0001EE  CFF5 F00E          	movff	tablat,??_ISR_alta+13
   924                           
   925                           ;timer_main.c: 26: if (INTCONbits.INT0IF == 1) {
   926  0001F2  A2F2               	btfss	intcon,1,c	;volatile
   927  0001F4  D015               	goto	i2l778
   928                           
   929                           ;timer_main.c: 27: if (PORTBbits.RB1 == 0) {
   930  0001F6  B281               	btfsc	3969,1,c	;volatile
   931  0001F8  D009               	goto	i2l768
   932                           
   933                           ;timer_main.c: 28: secondi++;
   934  0001FA  2A31               	incf	_secondi,f,c	;volatile
   935                           
   936                           ;timer_main.c: 29: if (secondi > 59) {
   937  0001FC  5031               	movf	_secondi,w,c	;volatile
   938  0001FE  0A80               	xorlw	128
   939  000200  0F44               	addlw	-188
   940  000202  A0D8               	btfss	status,0,c
   941  000204  D00C               	goto	i2l776
   942                           
   943                           ;timer_main.c: 30: minuti++;
   944  000206  2A30               	incf	_minuti,f,c	;volatile
   945                           
   946                           ;timer_main.c: 31: secondi = 0;
   947  000208  0E00               	movlw	0
   948  00020A  D008               	goto	L1
   949  00020C                     i2l768:
   950                           
   951                           ;timer_main.c: 34: secondi--;
   952  00020C  0631               	decf	_secondi,f,c	;volatile
   953                           
   954                           ;timer_main.c: 35: if (secondi < 1) {
   955  00020E  5031               	movf	_secondi,w,c	;volatile
   956  000210  0A80               	xorlw	128
   957  000212  0F7F               	addlw	-129
   958  000214  B0D8               	btfsc	status,0,c
   959  000216  D003               	goto	i2l776
   960                           
   961                           ;timer_main.c: 36: minuti--;
   962  000218  0630               	decf	_minuti,f,c	;volatile
   963                           
   964                           ;timer_main.c: 37: secondi = 59;
   965  00021A  0E3B               	movlw	59
   966  00021C                     L1:
   967  00021C  6E31               	movwf	_secondi,c	;volatile
   968  00021E                     i2l776:
   969                           
   970                           ;timer_main.c: 38: }
   971                           ;timer_main.c: 39: }
   972                           ;timer_main.c: 41: INTCONbits.INT0IF = 0;
   973  00021E  92F2               	bcf	intcon,1,c	;volatile
   974  000220                     i2l778:
   975                           
   976                           ;timer_main.c: 42: }
   977                           ;timer_main.c: 43: if (INTCONbits.TMR0IF == 1) {
   978  000220  A4F2               	btfss	intcon,2,c	;volatile
   979  000222  D00B               	goto	i2l66
   980                           
   981                           ;timer_main.c: 44: secondi--;
   982  000224  0631               	decf	_secondi,f,c	;volatile
   983                           
   984                           ;timer_main.c: 45: if (secondi < 0) {
   985  000226  AE31               	btfss	_secondi,7,c	;volatile
   986  000228  D003               	goto	i2l788
   987                           
   988                           ;timer_main.c: 46: minuti--;
   989  00022A  0630               	decf	_minuti,f,c	;volatile
   990                           
   991                           ;timer_main.c: 47: secondi = 59;
   992  00022C  0E3B               	movlw	59
   993  00022E  6E31               	movwf	_secondi,c	;volatile
   994  000230                     i2l788:
   995                           
   996                           ;timer_main.c: 48: }
   997                           ;timer_main.c: 49: TMR0H = 0x0B;
   998  000230  0E0B               	movlw	11
   999  000232  6ED7               	movwf	4055,c	;volatile
  1000                           
  1001                           ;timer_main.c: 50: TMR0L = 0xDC;
  1002  000234  0EDC               	movlw	220
  1003  000236  6ED6               	movwf	4054,c	;volatile
  1004                           
  1005                           ;timer_main.c: 51: INTCONbits.TMR0IF = 0;
  1006  000238  94F2               	bcf	intcon,2,c	;volatile
  1007  00023A                     i2l66:
  1008  00023A  C00E  FFF5         	movff	??_ISR_alta+13,tablat
  1009  00023E  C00D  FFF8         	movff	??_ISR_alta+12,tblptru
  1010  000242  C00C  FFF7         	movff	??_ISR_alta+11,tblptrh
  1011  000246  C00B  FFF6         	movff	??_ISR_alta+10,tblptrl
  1012  00024A  C00A  FFF4         	movff	??_ISR_alta+9,prodh
  1013  00024E  C009  FFF3         	movff	??_ISR_alta+8,prodl
  1014  000252  C008  FFDA         	movff	??_ISR_alta+7,fsr2h
  1015  000256  C007  FFD9         	movff	??_ISR_alta+6,fsr2l
  1016  00025A  C006  FFE2         	movff	??_ISR_alta+5,fsr1h
  1017  00025E  C005  FFE1         	movff	??_ISR_alta+4,fsr1l
  1018  000262  C004  FFEA         	movff	??_ISR_alta+3,fsr0h
  1019  000266  C003  FFE9         	movff	??_ISR_alta+2,fsr0l
  1020  00026A  C002  FFFB         	movff	??_ISR_alta+1,pclatu
  1021  00026E  C001  FFFA         	movff	??_ISR_alta,pclath
  1022  000272  9232               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1023  000274  0011               	retfie		f
  1024  000276                     __end_of_ISR_alta:
  1025                           	opt stack 0
  1026  0000                     pclatu	equ	0xFFB
  1027                           pclath	equ	0xFFA
  1028                           tblptru	equ	0xFF8
  1029                           tblptrh	equ	0xFF7
  1030                           tblptrl	equ	0xFF6
  1031                           tablat	equ	0xFF5
  1032                           prodh	equ	0xFF4
  1033                           prodl	equ	0xFF3
  1034                           intcon	equ	0xFF2
  1035                           intcon2	equ	0xFF1
  1036                           postinc0	equ	0xFEE
  1037                           fsr0h	equ	0xFEA
  1038                           fsr0l	equ	0xFE9
  1039                           wreg	equ	0xFE8
  1040                           postdec1	equ	0xFE5
  1041                           fsr1h	equ	0xFE2
  1042                           fsr1l	equ	0xFE1
  1043                           indf2	equ	0xFDF
  1044                           fsr2h	equ	0xFDA
  1045                           fsr2l	equ	0xFD9
  1046                           status	equ	0xFD8
  1047                           pclatu	equ	0xFFB
  1048                           pclath	equ	0xFFA
  1049                           tblptru	equ	0xFF8
  1050                           tblptrh	equ	0xFF7
  1051                           tblptrl	equ	0xFF6
  1052                           tablat	equ	0xFF5
  1053                           prodh	equ	0xFF4
  1054                           prodl	equ	0xFF3
  1055                           intcon	equ	0xFF2
  1056                           intcon2	equ	0xFF1
  1057                           postinc0	equ	0xFEE
  1058                           fsr0h	equ	0xFEA
  1059                           fsr0l	equ	0xFE9
  1060                           wreg	equ	0xFE8
  1061                           postdec1	equ	0xFE5
  1062                           fsr1h	equ	0xFE2
  1063                           fsr1l	equ	0xFE1
  1064                           indf2	equ	0xFDF
  1065                           fsr2h	equ	0xFDA
  1066                           fsr2l	equ	0xFD9
  1067                           status	equ	0xFD8
  1068                           
  1069                           	psect	rparam
  1070  0000                     pclatu	equ	0xFFB
  1071                           pclath	equ	0xFFA
  1072                           tblptru	equ	0xFF8
  1073                           tblptrh	equ	0xFF7
  1074                           tblptrl	equ	0xFF6
  1075                           tablat	equ	0xFF5
  1076                           prodh	equ	0xFF4
  1077                           prodl	equ	0xFF3
  1078                           intcon	equ	0xFF2
  1079                           intcon2	equ	0xFF1
  1080                           postinc0	equ	0xFEE
  1081                           fsr0h	equ	0xFEA
  1082                           fsr0l	equ	0xFE9
  1083                           wreg	equ	0xFE8
  1084                           postdec1	equ	0xFE5
  1085                           fsr1h	equ	0xFE2
  1086                           fsr1l	equ	0xFE1
  1087                           indf2	equ	0xFDF
  1088                           fsr2h	equ	0xFDA
  1089                           fsr2l	equ	0xFD9
  1090                           status	equ	0xFD8
  1091                           
  1092                           	psect	temp
  1093  000032                     btemp:
  1094                           	opt stack 0
  1095  000032                     	ds	1
  1096  0000                     int$flags	set	btemp
  1097                           pclatu	equ	0xFFB
  1098                           pclath	equ	0xFFA
  1099                           tblptru	equ	0xFF8
  1100                           tblptrh	equ	0xFF7
  1101                           tblptrl	equ	0xFF6
  1102                           tablat	equ	0xFF5
  1103                           prodh	equ	0xFF4
  1104                           prodl	equ	0xFF3
  1105                           intcon	equ	0xFF2
  1106                           intcon2	equ	0xFF1
  1107                           postinc0	equ	0xFEE
  1108                           fsr0h	equ	0xFEA
  1109                           fsr0l	equ	0xFE9
  1110                           wreg	equ	0xFE8
  1111                           postdec1	equ	0xFE5
  1112                           fsr1h	equ	0xFE2
  1113                           fsr1l	equ	0xFE1
  1114                           indf2	equ	0xFDF
  1115                           fsr2h	equ	0xFDA
  1116                           fsr2l	equ	0xFD9
  1117                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      49
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv

Critical Paths under _ISR_alta in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     858
                                             22 COMRAM     7     7      0
                            ___awdiv
                     _configurazione
 ---------------------------------------------------------------------------------
 (1) _configurazione                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     472
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR_alta                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _configurazione

 _ISR_alta (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1D      31       1       52.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      31      20        0.0%
DATA                 0      0      31       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Apr 24 00:11:13 2016

                     l81 011C                       l73 00CE                       l77 00DE  
           ___awdiv@sign 0014              __CFG_BOR$ON 000000              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l920 02B0                      l922 02B8  
                    l914 029A                      l940 02F0                      l932 02D8  
                    l924 02BC                      l908 028A                      l936 02E2  
                    l960 0076                      l946 001E                      l956 006E  
                    l982 00F0                      l992 0108                      l996 0110  
                    l998 0114             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    u607 0190                      u617 01B0                      u577 00C0  
                    u587 013A                      u597 015A                      prod 000FF3  
                    wreg 000FE8             __CFG_FOSC$HS 000000          ?_configurazione 0001  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     l1010 0148  
                   l1020 0166                     l1012 014C                     l1022 016A  
                   l1016 0154                     l1042 01AA                     l1026 0172  
                   l1036 019E                     l1046 01BC                     l1038 01A2  
                   _LATA 000F89                     _LATB 000F8A                     _LATC 000F8B  
                   _LATD 000F8C                     i2l66 023A                     _disp 002C  
                   _main 001A                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr0l 000FE9                     fsr2h 000FDA                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9                     btemp 0032  
                   pclat 000FFA                     prodh 000FF4                     prodl 000FF3  
                   start 0016            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000010            __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000  
                  ?_main 0001          __end_of___awdiv 02FA                    _T0CON 000FD5  
        ___awdiv@divisor 0011                    i2l776 021E                    i2l768 020C  
                  i2l778 0220                    i2l788 0230          ___awdiv@counter 0013  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _PORTC 000F82  
                  _PORTD 000F83            __CFG_USBDIV$1 000000                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000         __end_of_ISR_alta 0276            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _porte 0028                    main@b 0019                    main@c 0018  
                  main@f 001A                    main@i 001D                    tablat 000FF5  
                  status 000FD8           __CFG_ICPRT$OFF 000000          __initialization 02FA  
           __end_of_main 01C0                   ??_main 0017            __activetblptr 000000  
       ___awdiv@dividend 000F           __CFG_XINST$OFF 000000                ??___awdiv 0013  
         __CFG_STVREN$ON 000000         ___awdiv@quotient 0015                   _minuti 0030  
                 _numeri 001E             __pdataCOMRAM 001E                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0326          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001                ?_ISR_alta 0001         ??_configurazione 000F  
             ??_ISR_alta 0001          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 0276                  __pcinit 02FA  
                __ramtop 0800                  __ptext0 001A                  __ptext1 0330  
                __ptext2 0276                _T0CONbits 000FD5                  _secondi 0031  
         __pintcode_body 01C0     end_of_initialization 0326                  int_func 01C0  
                postdec1 000FE5                  postinc0 000FEE                _PORTAbits 000F80  
              _PORTBbits 000F81                _PORTDbits 000F83            __pidataCOMRAM 0366  
      __size_of_ISR_alta 026E      start_initialization 02FA         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 002C                __pintcode 0008                 ?___awdiv 000F  
__size_of_configurazione 0036                 _UCFGbits 000F6F                 _RCONbits 000FD0  
       __CFG_WDTPS$32768 000000                 _ISR_alta 0008                 _UCONbits 000F6D  
              main@i_545 001B                main@i_547 001C              _INTCON2bits 000FF1  
              copy_data0 031A                 __Hrparam 0000                 __Lrparam 0000  
       __size_of___awdiv 0084            __size_of_main 01A6                 int$flags 0032  
  __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2           _configurazione 0330  
               intlevel2 0000   __end_of_configurazione 0366  
